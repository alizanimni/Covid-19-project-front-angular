import { InjectionToken, Provider } from '@angular/core';
export type ContentSecurityPolicyFeature = NgIconFeature<NgIconFeatureKind.ContentSecurityPolicyFeature>;
export type NgIconFeatures = ContentSecurityPolicyFeature;
/**
 * The list of features as an enum to uniquely type each feature.
 */
export declare const enum NgIconFeatureKind {
    ContentSecurityPolicyFeature = 0
}
/**
 * Helper type to represent a feature.
 */
export interface NgIconFeature<FeatureKind extends NgIconFeatureKind> {
    ɵkind: FeatureKind;
    ɵproviders: Provider[];
}
/**
 * Helper function to create an object that represents a feature.
 */
export declare function createFeature<FeatureKind extends NgIconFeatureKind>(kind: FeatureKind, providers: Provider[]): NgIconFeature<FeatureKind>;
export type NgIconPreProcessor = (icon: string) => string;
export type NgIconPostProcessor = (element: HTMLElement) => void;
export declare const NgIconPreProcessorToken: InjectionToken<NgIconPreProcessor>;
export declare const NgIconPostProcessorToken: InjectionToken<NgIconPostProcessor>;
export declare function injectNgIconPreProcessor(): NgIconPreProcessor;
export declare function injectNgIconPostProcessor(): NgIconPostProcessor;
